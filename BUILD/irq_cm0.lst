


ARM Macro Assembler    Page 1 


    1 00000000         #       1                "./mbed-os/cmsis/CMSIS_5/CMSIS/
RTOS2/RTX/Source/TOOLCHAIN_ARM/TARGET_M0P/irq_cm0.S"
    1 00000000         #       1                "<built-in>" 1
    1 00000000         #       1                "./mbed-os/cmsis/CMSIS_5/CMSIS/
RTOS2/RTX/Source/TOOLCHAIN_ARM/TARGET_M0P/irq_cm0.S" 2
    1 00000000         ;
    2 00000000         #       28               "./mbed-os/cmsis/CMSIS_5/CMSIS/
RTOS2/RTX/Source/TOOLCHAIN_ARM/TARGET_M0P/irq_cm0.S"
   28 00000000 00000000 
                       RTX_STACK_CHECK
                               EQU              0
   29 00000000         
   30 00000000         
   31 00000000 00000014 
                       I_T_RUN_OFS
                               EQU              20          ; osRtxInfo.thread.
                                                            run offset
   32 00000000 00000038 
                       TCB_SP_OFS
                               EQU              56          ; TCB.SP offset
   33 00000000         
   34 00000000 00000001 
                       osRtxErrorStackOverflow
                               EQU              1           ; Stack overflow
   35 00000000         
   36 00000000         
   37 00000000         
   38 00000000                 PRESERVE8
   39 00000000                 THUMB
   40 00000000         
   41 00000000         
   42 00000000                 AREA             |.constdata|, DATA, READONLY
   43 00000000                 EXPORT           irqRtxLib
   44 00000000 00      irqRtxLib
                               DCB              0           ; Non weak library 
                                                            reference
   45 00000001         
   46 00000001         
   47 00000001                 AREA             |.text|, CODE, READONLY
   48 00000000         
   49 00000000         
   50 00000000         SVC_Handler
                               PROC
   51 00000000                 EXPORT           SVC_Handler
   52 00000000                 IMPORT           osRtxUserSVC
   53 00000000                 IMPORT           osRtxInfo
   54 00000000                 IF               RTX_STACK_CHECK != 0
   57                          ENDIF
   58 00000000         
   59 00000000 4670            MOV              R0,LR
   60 00000002 08C0            LSRS             R0,R0,#3    ; Determine return 
                                                            stack from EXC_RETU
                                                            RN bit 2
   61 00000004 D32C            BCC              SVC_MSP     ; Branch if return 
                                                            stack is MSP
   62 00000006 F3EF 8009       MRS              R0,PSP      ; Get PSP
   63 0000000A         
   64 0000000A         SVC_Number
   65 0000000A 6981            LDR              R1,[R0,#24] ; Load saved PC fro



ARM Macro Assembler    Page 2 


                                                            m stack
   66 0000000C 1E89            SUBS             R1,R1,#2    ; Point to SVC inst
                                                            ruction
   67 0000000E 7809            LDRB             R1,[R1]     ; Load SVC number
   68 00000010 2900            CMP              R1,#0       ; Check SVC number
   69 00000012 D129            BNE              SVC_User    ; Branch if not SVC
                                                             0
   70 00000014         
   71 00000014 B501            PUSH             {R0,LR}     ; Save SP and EXC_R
                                                            ETURN
   72 00000016 C80F            LDMIA            R0,{R0-R3}  ; Load function par
                                                            ameters from stack
   73 00000018 47B8            BLX              R7          ; Call service func
                                                            tion
   74 0000001A BC0C            POP              {R2,R3}     ; Restore SP and EX
                                                            C_RETURN
   75 0000001C C203            STMIA            R2!,{R0-R1} ; Store function re
                                                            turn values
   76 0000001E 469E            MOV              LR,R3       ; Set EXC_RETURN
   77 00000020         
   78 00000020         SVC_Context
   79 00000020 4B1E            LDR              R3,=osRtxInfo+I_T_RUN_OFS ; Loa
                                                            d address of osRtxI
                                                            nfo.thread.run
   80 00000022 CB06            LDMIA            R3!,{R1,R2} ; Load osRtxInfo.th
                                                            read.run: curr & ne
                                                            xt
   81 00000024 4291            CMP              R1,R2       ; Check if thread s
                                                            witch is required
   82 00000026 D01E            BEQ              SVC_Exit    ; Branch when threa
                                                            ds are the same
   83 00000028         
   84 00000028 3B08            SUBS             R3,R3,#8    ; Adjust address
   85 0000002A 601A            STR              R2,[R3]     ; osRtxInfo.thread.
                                                            run: curr = next
   86 0000002C 2900            CMP              R1,#0
   87 0000002E D009            BEQ              SVC_ContextRestore ; Branch if 
                                                            running thread is d
                                                            eleted
   88 00000030         
   89 00000030         SVC_ContextSave
   90 00000030 F3EF 8009       MRS              R0,PSP      ; Get PSP
   91 00000034 3820            SUBS             R0,R0,#32   ; Calculate SP: spa
                                                            ce for R4..R11
   92 00000036 6388            STR              R0,[R1,#TCB_SP_OFS] ; Store SP
   93 00000038         
   94 00000038                 IF               RTX_STACK_CHECK != 0
  113                          ENDIF
  114 00000038         
  115 00000038 C0F0            STMIA            R0!,{R4-R7} ; Save R4..R7
  116 0000003A 4644            MOV              R4,R8
  117 0000003C 464D            MOV              R5,R9
  118 0000003E 4656            MOV              R6,R10
  119 00000040 465F            MOV              R7,R11
  120 00000042 C0F0            STMIA            R0!,{R4-R7} ; Save R8..R11
  121 00000044         
  122 00000044         SVC_ContextRestore
  123 00000044 6B90            LDR              R0,[R2,#TCB_SP_OFS] ; Load SP
  124 00000046 3010            ADDS             R0,R0,#16   ; Adjust address



ARM Macro Assembler    Page 3 


  125 00000048 C8F0            LDMIA            R0!,{R4-R7} ; Restore R8..R11
  126 0000004A 46A0            MOV              R8,R4
  127 0000004C 46A9            MOV              R9,R5
  128 0000004E 46B2            MOV              R10,R6
  129 00000050 46BB            MOV              R11,R7
  130 00000052 F380 8809       MSR              PSP,R0      ; Set PSP
  131 00000056 3820            SUBS             R0,R0,#32   ; Adjust address
  132 00000058 C8F0            LDMIA            R0!,{R4-R7} ; Restore R4..R7
  133 0000005A         
  134 0000005A 2002            MOVS             R0,#2       ; Binary complement
                                                             of 0xFFFFFFFD
  135 0000005C 43C0            MVNS             R0,R0       ; Set EXC_RETURN va
                                                            lue
  136 0000005E 4700            BX               R0          ; Exit from handler
                                                            
  137 00000060         
  138 00000060         SVC_MSP
  139 00000060 F3EF 8008       MRS              R0,MSP      ; Get MSP
  140 00000064 E7D1            B                SVC_Number
  141 00000066         
  142 00000066         SVC_Exit
  143 00000066 4770            BX               LR          ; Exit from handler
                                                            
  144 00000068         
  145 00000068         SVC_User
  146 00000068 4A0D            LDR              R2,=osRtxUserSVC ; Load address
                                                             of SVC table
  147 0000006A 6813            LDR              R3,[R2]     ; Load SVC maximum 
                                                            number
  148 0000006C 4299            CMP              R1,R3       ; Check SVC number 
                                                            range
  149 0000006E D8FA            BHI              SVC_Exit    ; Branch if out of 
                                                            range
  150 00000070         
  151 00000070 B501            PUSH             {R0,LR}     ; Save SP and EXC_R
                                                            ETURN
  152 00000072 0089            LSLS             R1,R1,#2
  153 00000074 5853            LDR              R3,[R2,R1]  ; Load address of S
                                                            VC function
  154 00000076 469C            MOV              R12,R3
  155 00000078 C80F            LDMIA            R0,{R0-R3}  ; Load function par
                                                            ameters from stack
  156 0000007A 47E0            BLX              R12         ; Call service func
                                                            tion
  157 0000007C BC0C            POP              {R2,R3}     ; Restore SP and EX
                                                            C_RETURN
  158 0000007E 6010            STR              R0,[R2]     ; Store function re
                                                            turn value
  159 00000080 469E            MOV              LR,R3       ; Set EXC_RETURN
  160 00000082         
  161 00000082 4770            BX               LR          ; Return from handl
                                                            er
  162 00000084         
  163 00000084                 ALIGN
  164 00000084                 ENDP
  165 00000084         
  166 00000084         
  167 00000084         PendSV_Handler
                               PROC



ARM Macro Assembler    Page 4 


  168 00000084                 EXPORT           PendSV_Handler
  169 00000084                 IMPORT           osRtxPendSV_Handler
  170 00000084         
  171 00000084 B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  172 00000086 F7FF FFFE       BL               osRtxPendSV_Handler ; Call osRt
                                                            xPendSV_Handler
  173 0000008A BC03            POP              {R0,R1}     ; Restore EXC_RETUR
                                                            N
  174 0000008C 468E            MOV              LR,R1       ; Set EXC_RETURN
  175 0000008E E7C7            B                SVC_Context ; Branch to context
                                                             handling
  176 00000090         
  177 00000090                 ALIGN
  178 00000090                 ENDP
  179 00000090         
  180 00000090         
  181 00000090         SysTick_Handler
                               PROC
  182 00000090                 EXPORT           SysTick_Handler
  183 00000090                 IMPORT           osRtxTick_Handler
  184 00000090         
  185 00000090 B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  186 00000092 F7FF FFFE       BL               osRtxTick_Handler ; Call osRtxT
                                                            ick_Handler
  187 00000096 BC03            POP              {R0,R1}     ; Restore EXC_RETUR
                                                            N
  188 00000098 468E            MOV              LR,R1       ; Set EXC_RETURN
  189 0000009A E7C1            B                SVC_Context ; Branch to context
                                                             handling
  190 0000009C         
  191 0000009C                 ALIGN
  192 0000009C                 ENDP
  193 0000009C         
  194 0000009C         
  195 0000009C                 END
              00000014 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M0+ -
o.\build\irq_cm0.o -IC:\Users\maria\AppData\Local\Arm\Packs\Keil\STM32L0xx_DFP\
2.1.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include --predefine="__UVISION_VERSION 
SETA 536" --predefine="STM32L072xx SETA 1" --cpreproc_opts=-D__ASSERT_MSG,-DTRA
NSACTION_QUEUE_SIZE_SPI=2,-D__CORTEX_M0PLUS,-DUSE_HAL_DRIVER,-DSTM32L072xx,-D__
MBED_CMSIS_RTOS_CM,-DEXTRA_IDLE_STACK_REQUIRED,-D__CMSIS_RTOS,-DMBED_TICKLESS,-
DUSE_FULL_LL_DRIVER,-DARM_MATH_CM0PLUS,--target=arm-arm-none-eabi,-mcpu=cortex-
m0plus,-D__UVISION_VERSION=536,-DSTM32L072xx --list=.\build\irq_cm0.lst ./mbed-
os/cmsis/CMSIS_5/CMSIS/RTOS2/RTX/Source/TOOLCHAIN_ARM/TARGET_M0P/irq_cm0.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.constdata 00000000

Symbol: .constdata
   Definitions
      At line 42 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      None
Comment: .constdata unused
irqRtxLib 00000000

Symbol: irqRtxLib
   Definitions
      At line 44 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 43 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
Comment: irqRtxLib used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 47 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      None
Comment: .text unused
PendSV_Handler 00000084

Symbol: PendSV_Handler
   Definitions
      At line 167 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 168 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
Comment: PendSV_Handler used once
SVC_Context 00000020

Symbol: SVC_Context
   Definitions
      At line 78 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 175 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
      At line 189 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S

SVC_ContextRestore 00000044

Symbol: SVC_ContextRestore
   Definitions
      At line 122 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 87 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
Comment: SVC_ContextRestore used once
SVC_ContextSave 00000030

Symbol: SVC_ContextSave
   Definitions
      At line 89 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      None
Comment: SVC_ContextSave unused
SVC_Exit 00000066

Symbol: SVC_Exit
   Definitions
      At line 142 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 82 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 149 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S

SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 50 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 51 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
Comment: SVC_Handler used once
SVC_MSP 00000060

Symbol: SVC_MSP
   Definitions
      At line 138 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 61 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
Comment: SVC_MSP used once
SVC_Number 0000000A

Symbol: SVC_Number
   Definitions
      At line 64 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 140 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
Comment: SVC_Number used once
SVC_User 00000068

Symbol: SVC_User
   Definitions
      At line 145 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 69 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
Comment: SVC_User used once
SysTick_Handler 00000090

Symbol: SysTick_Handler
   Definitions
      At line 181 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 182 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
Comment: SysTick_Handler used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

I_T_RUN_OFS 00000014

Symbol: I_T_RUN_OFS
   Definitions
      At line 31 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 79 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
Comment: I_T_RUN_OFS used once
RTX_STACK_CHECK 00000000

Symbol: RTX_STACK_CHECK
   Definitions
      At line 28 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 54 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
      At line 94 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S

TCB_SP_OFS 00000038

Symbol: TCB_SP_OFS
   Definitions
      At line 32 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 92 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
      At line 123 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S

osRtxErrorStackOverflow 00000001

Symbol: osRtxErrorStackOverflow
   Definitions
      At line 34 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      None
Comment: osRtxErrorStackOverflow unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

osRtxInfo 00000000

Symbol: osRtxInfo
   Definitions
      At line 53 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 79 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
Comment: osRtxInfo used once
osRtxPendSV_Handler 00000000

Symbol: osRtxPendSV_Handler
   Definitions
      At line 169 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 172 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
Comment: osRtxPendSV_Handler used once
osRtxTick_Handler 00000000

Symbol: osRtxTick_Handler
   Definitions
      At line 183 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 186 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
Comment: osRtxTick_Handler used once
osRtxUserSVC 00000000

Symbol: osRtxUserSVC
   Definitions
      At line 52 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCHA
IN_ARM\TARGET_M0P\irq_cm0.S
   Uses
      At line 146 in file .\mbed-os\cmsis\CMSIS_5\CMSIS\RTOS2\RTX\Source\TOOLCH
AIN_ARM\TARGET_M0P\irq_cm0.S
Comment: osRtxUserSVC used once
4 symbols
355 symbols in table
